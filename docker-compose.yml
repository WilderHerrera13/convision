services:
  app:
    build:
      context: ./convision-api
      dockerfile: Dockerfile
    container_name: convision_app
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./convision-api:/app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=root
      - DB_PASSWORD=${DB_PASSWORD:-root}
    env_file:
      - convision-api/.env
    networks:
      - convision_network
    depends_on:
      mysql:
        condition: service_healthy

  frontend:
    build:
      context: ./convision-front
      dockerfile: Dockerfile
    container_name: convision_frontend
    restart: unless-stopped
    working_dir: /app
    env_file:
      - convision-front/.env
    volumes:
      - ./convision-front:/app
    ports:
      - "4300:4300"
    networks:
      - convision_network

  mysql:
    image: mysql:8.0
    # platform: linux/arm64/v8
    container_name: convision_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./convision-api/docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - convision_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-root}"]
      interval: 10s      
      timeout: 10s         
      retries: 6
      start_period: 40s

  phpmyadmin:
    image: phpmyadmin:latest
    # image: arm64v8/phpmyadmin:latest
    # platform: linux/arm64/v8
    container_name: convision_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
    ports:
      - "8080:80"
    networks:
      - convision_network
    depends_on:
      mysql:
        condition: service_healthy

networks:
  convision_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 