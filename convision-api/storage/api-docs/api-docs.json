{
    "openapi": "3.0.0",
    "info": {
        "title": "Convision API Documentation",
        "description": "API documentation for the Convision optical store application",
        "contact": {
            "email": "admin@convision.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/v1/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get list of appointments",
                "operationId": "b827cd052bc10ca91a7753a2c98c95c8",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "s_f",
                        "in": "query",
                        "description": "Search fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_v",
                        "in": "query",
                        "description": "Search values",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Appointment"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Create a new appointment",
                "operationId": "48a846f3ad34419db2fd16184dfbb330",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "date",
                                    "time"
                                ],
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-20"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Regular checkup",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "scheduled",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "scheduled"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get appointment details",
                "operationId": "19c3861848d29c8e408e94bb84dea1f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Update appointment details",
                "operationId": "0eed29492f9cb57edc5953fc9da63637",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-20"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Regular checkup",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "scheduled",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "scheduled"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete an appointment",
                "operationId": "5043f7d38fe8e91347d7fbfaf1bfd532",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Appointment deleted successfully"
                    },
                    "404": {
                        "description": "Appointment not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/appointments/{id}/take": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Specialist takes an appointment",
                "operationId": "4105f043ecc9654f2c5bfec6de3812cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment taken successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Appointment already taken or not in scheduled status"
                    },
                    "403": {
                        "description": "Not authorized to take this appointment"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/appointments/{id}/pause": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Specialist pauses an in-progress appointment",
                "operationId": "987b0700ffe4489cf5df57104d354170",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment paused successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Appointment is not in in_progress status"
                    },
                    "403": {
                        "description": "Not authorized to pause this appointment"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/appointments/{id}/resume": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Specialist resumes a paused appointment",
                "operationId": "1fe7cb5ecb932b962e99ad37c0fcddb5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment resumed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Appointment is not in paused status or specialist already has an active appointment"
                    },
                    "403": {
                        "description": "Not authorized to resume this appointment"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/appointments/{id}/reschedule": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Reschedule an appointment",
                "operationId": "68c7fa4149e25e8513b891e7b15fbb1f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-20"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Regular checkup",
                                        "nullable": true
                                    },
                                    "specialist_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment rescheduled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid reschedule request"
                    },
                    "403": {
                        "description": "Not authorized to reschedule this appointment"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and get JWT token",
                "operationId": "a7997e7c1e3bfed64d4e56de82415931",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@convision.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "enum": [
                                                        "admin",
                                                        "specialist",
                                                        "receptionist"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user details",
                "operationId": "37d33f0281f67d31d05b4c45eea0143b",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string",
                                            "enum": [
                                                "admin",
                                                "specialist",
                                                "receptionist"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user (Invalidate the token)",
                "operationId": "f6b8957b4c0b25636613a9f0512a8ba9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT token",
                "operationId": "c42c3cd7fd7fe0dbd5bcc42962059e90",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "enum": [
                                                        "admin",
                                                        "specialist",
                                                        "receptionist"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get list of brands",
                "operationId": "265f173d55c77d2ffffe46be4ba57fa8",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "s_f",
                        "in": "query",
                        "description": "Search fields (JSON array or comma-separated string)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_v",
                        "in": "query",
                        "description": "Search values corresponding to search_fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of brands retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new brand",
                "operationId": "354e334c26df48b4a20817df45f8fa7b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Essilor"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High quality lenses"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/brands/{brand}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get brand details",
                "operationId": "a756d7001d49227725b3d059fe64b1b9",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand details retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update brand details",
                "operationId": "824297fd29ac022df9801507952ef64b",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Essilor"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High quality lenses"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete a brand",
                "operationId": "2053a195c87803461b7391159dc3fafb",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Brand deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "422": {
                        "description": "Cannot delete, brand is in use"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lens-classes": {
            "get": {
                "tags": [
                    "Lens Classes"
                ],
                "summary": "Get list of lens classes",
                "operationId": "getLensClasses",
                "parameters": [
                    {
                        "name": "s_f",
                        "in": "query",
                        "description": "Search fields (JSON array or comma-separated string)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_v",
                        "in": "query",
                        "description": "Search values corresponding to search_fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_o",
                        "in": "query",
                        "description": "Search operator (and/or) for multiple conditions",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "and",
                                "or"
                            ]
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by field and direction (format: field,direction)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of lens classes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LensClass"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lens Classes"
                ],
                "summary": "Create a new lens class",
                "operationId": "bad5c0945dbc3049d6131e3a7dd21366",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Premium"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High-end lens class"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lens class created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LensClass"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lens-classes/{lens_class}": {
            "get": {
                "tags": [
                    "Lens Classes"
                ],
                "summary": "Get lens class details",
                "operationId": "61411d16c27377672349b69eaf4d0f11",
                "parameters": [
                    {
                        "name": "lens_class",
                        "in": "path",
                        "description": "Lens class ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lens class details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LensClass"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Lens class not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Lens Classes"
                ],
                "summary": "Update lens class details",
                "operationId": "62c2f3f6ffa0bcf87e1950a2ba3c9c84",
                "parameters": [
                    {
                        "name": "lens_class",
                        "in": "path",
                        "description": "Lens class ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Premium"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High-end lens class"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lens class updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LensClass"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lens class not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Lens Classes"
                ],
                "summary": "Delete a lens class",
                "operationId": "6b276f57d22754d21aed10f0ac9149e4",
                "parameters": [
                    {
                        "name": "lens_class",
                        "in": "path",
                        "description": "Lens class ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Lens class deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lens class not found"
                    },
                    "422": {
                        "description": "Deletion failed (e.g., in use)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lenses/{lens_id}/notes": {
            "get": {
                "tags": [
                    "Lens Notes"
                ],
                "summary": "Get notes for a specific lens",
                "operationId": "39b08935ebe9b1ff04af1b1b49d96de3",
                "parameters": [
                    {
                        "name": "lens_id",
                        "in": "path",
                        "description": "Lens ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "content": {
                                                        "type": "string"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Lens not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lens Notes"
                ],
                "summary": "Create a new note for a lens",
                "operationId": "6a672aef48673e8372b67754099464f8",
                "parameters": [
                    {
                        "name": "lens_id",
                        "in": "path",
                        "description": "Lens ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "This lens has been updated with new features"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "content": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Lens not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lens-types": {
            "get": {
                "tags": [
                    "Lens Types"
                ],
                "summary": "Get list of lens types",
                "operationId": "ed2d4b7a971563cd8b9f72e8b6ca8334",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of lens types retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LensType"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lens Types"
                ],
                "summary": "Create a new lens type",
                "operationId": "2ac7234712c4208d4df5b8a342dd048c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Single Vision"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Standard single vision lenses"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lens type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LensType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lens-types/{id}": {
            "get": {
                "tags": [
                    "Lens Types"
                ],
                "summary": "Get lens type details",
                "operationId": "3632ed1ce9ec4e3fade5b1a91a655b73",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lens type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lens type details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LensType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Lens type not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Lens Types"
                ],
                "summary": "Update lens type details",
                "operationId": "efbb5d036af067497306d918522c066b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lens type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Single Vision"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Standard single vision lenses"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lens type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LensType"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lens type not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Lens Types"
                ],
                "summary": "Delete a lens type",
                "operationId": "ae2ecdd1db37d0b42e2f4c319c5fe1e5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lens type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Lens type deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lens type not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/{type}/{id}/notes": {
            "get": {
                "tags": [
                    "Notes"
                ],
                "summary": "Get notes for a specific resource",
                "operationId": "49e6dd6819c2b0a548dbb1e09bb21dab",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Resource type (lenses or appointments)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lenses",
                                "appointments"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "content": {
                                                        "type": "string"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notes"
                ],
                "summary": "Create a new note for a resource",
                "operationId": "994b58eaa5d587676fe6a80c1b2e2780",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Resource type (lenses or appointments)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lenses",
                                "appointments"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "This is a note"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "content": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of orders",
                "operationId": "00d3856d2d3d93124e0cc021d0cb5b79",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "s_f",
                        "in": "query",
                        "description": "Search fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_v",
                        "in": "query",
                        "description": "Search values",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc/desc)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "order_number": {
                                                        "type": "string"
                                                    },
                                                    "patient_id": {
                                                        "type": "integer"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "processing",
                                                            "completed",
                                                            "cancelled"
                                                        ]
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "payment_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "pending",
                                                            "paid",
                                                            "refunded"
                                                        ]
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "patient": {
                                                        "type": "object"
                                                    },
                                                    "items": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "created_by": {
                                                        "type": "object"
                                                    },
                                                    "laboratory": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "79da0a1adcc617490783dfd61927ff56",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "items"
                                ],
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "appointment_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "laboratory_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "pending"
                                    },
                                    "payment_status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "refunded"
                                        ],
                                        "example": "pending"
                                    },
                                    "payment_method_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Rush order",
                                        "nullable": true
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "unit_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 99.99
                                                },
                                                "discount_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10,
                                                    "nullable": true
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Special instructions",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "order_number": {
                                            "type": "string"
                                        },
                                        "patient_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "payment_status": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details",
                "operationId": "b2f9845bf9fe11158e0e43f1dd0c5802",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "order_number": {
                                            "type": "string"
                                        },
                                        "patient_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "payment_status": {
                                            "type": "string"
                                        },
                                        "notes": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "patient": {
                                            "type": "object"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "appointment": {
                                            "type": "object"
                                        },
                                        "created_by": {
                                            "type": "object"
                                        },
                                        "laboratory": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update order details",
                "operationId": "d7a01d1bd37b35138c8f42f885ebe889",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "appointment_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "laboratory_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "processing"
                                    },
                                    "payment_status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "refunded"
                                        ],
                                        "example": "paid"
                                    },
                                    "payment_method_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Updated notes",
                                        "nullable": true
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "unit_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 99.99
                                                },
                                                "discount_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10,
                                                    "nullable": true
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Special instructions",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "order_number": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}/pdf": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Download order PDF",
                "operationId": "b0fe80172acb6d5f572f95b2f96ee05e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}/status": {
            "patch": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "operationId": "d4929711ba63a254b67d338154f92689",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "processing"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Status update notes",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}/payment-status": {
            "patch": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update order payment status",
                "operationId": "2075e940732c6a9a369d5c3c461a2fcd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_status"
                                ],
                                "properties": {
                                    "payment_status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "refunded"
                                        ],
                                        "example": "paid"
                                    },
                                    "payment_method_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "transaction_reference": {
                                        "type": "string",
                                        "example": "TXN123456",
                                        "nullable": true
                                    },
                                    "payment_notes": {
                                        "type": "string",
                                        "example": "Payment completed via credit card",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order payment status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "payment_status": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/patients": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get list of patients",
                "operationId": "6747f925788f494507252b8889e09dd1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "s_f",
                        "in": "query",
                        "description": "Search fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_v",
                        "in": "query",
                        "description": "Search values",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc/desc)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Patient"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Create a new patient",
                "operationId": "9296610ded1a685f9284d36de20ab313",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "phone",
                                    "identification",
                                    "identification_type",
                                    "birth_date",
                                    "gender"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "identification": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "identification_type": {
                                        "type": "string",
                                        "example": "dni"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St",
                                        "nullable": true
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York",
                                        "nullable": true
                                    },
                                    "district": {
                                        "type": "string",
                                        "example": "Villavicencio",
                                        "nullable": true
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY",
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Colombia",
                                        "nullable": true
                                    },
                                    "neighborhood": {
                                        "type": "string",
                                        "example": "Downtown",
                                        "nullable": true
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "10001",
                                        "nullable": true
                                    },
                                    "eps": {
                                        "type": "string",
                                        "example": "EPS/ARS",
                                        "nullable": true
                                    },
                                    "affiliation": {
                                        "type": "string",
                                        "example": "Titular",
                                        "nullable": true
                                    },
                                    "coverage": {
                                        "type": "string",
                                        "example": "PLAN_DE_BENEFICIOS",
                                        "nullable": true
                                    },
                                    "occupation": {
                                        "type": "string",
                                        "example": "Engineer",
                                        "nullable": true
                                    },
                                    "education": {
                                        "type": "string",
                                        "example": "University",
                                        "nullable": true
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": "Senior Developer",
                                        "nullable": true
                                    },
                                    "company": {
                                        "type": "string",
                                        "example": "Acme Inc",
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active",
                                        "nullable": true
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/patients/{id}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient details",
                "operationId": "054f2ccead52a541c84d2434da85858d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update patient details",
                "operationId": "3b8d0a85cd7984d11ab97dea48582496",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "phone",
                                    "identification",
                                    "identification_type",
                                    "birth_date",
                                    "gender"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "identification": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "identification_type": {
                                        "type": "string",
                                        "example": "dni"
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St",
                                        "nullable": true
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York",
                                        "nullable": true
                                    },
                                    "district": {
                                        "type": "string",
                                        "example": "Villavicencio",
                                        "nullable": true
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY",
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Colombia",
                                        "nullable": true
                                    },
                                    "neighborhood": {
                                        "type": "string",
                                        "example": "Downtown",
                                        "nullable": true
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "10001",
                                        "nullable": true
                                    },
                                    "eps": {
                                        "type": "string",
                                        "example": "EPS/ARS",
                                        "nullable": true
                                    },
                                    "affiliation": {
                                        "type": "string",
                                        "example": "Titular",
                                        "nullable": true
                                    },
                                    "coverage": {
                                        "type": "string",
                                        "example": "PLAN_DE_BENEFICIOS",
                                        "nullable": true
                                    },
                                    "occupation": {
                                        "type": "string",
                                        "example": "Engineer",
                                        "nullable": true
                                    },
                                    "education": {
                                        "type": "string",
                                        "example": "University",
                                        "nullable": true
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": "Senior Developer",
                                        "nullable": true
                                    },
                                    "company": {
                                        "type": "string",
                                        "example": "Acme Inc",
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active",
                                        "nullable": true
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete a patient",
                "operationId": "593eda9a73fd98782af771e44d1adef6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Patient deleted successfully"
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/patients/{id}/restore": {
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Restore a soft-deleted patient",
                "operationId": "8855bfe2b588f97058c321988be686c4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/patients/{id}/profile-image": {
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Upload a profile image for a patient",
                "operationId": "5c1aee3fec9990680c2ba97a8cedaa78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "profile_image": {
                                        "description": "Profile image file (JPEG, PNG, JPG)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile image uploaded successfully"
                                        },
                                        "profile_image": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "operationId": "1ce27f90dd8c39cea9520bf45d58c7c2",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "s_f",
                        "in": "query",
                        "description": "Search fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_v",
                        "in": "query",
                        "description": "Search values",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc/desc)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "internal_code": {
                                                        "type": "string"
                                                    },
                                                    "identifier": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "cost": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ]
                                                    },
                                                    "category": {
                                                        "type": "object"
                                                    },
                                                    "brand": {
                                                        "type": "object"
                                                    },
                                                    "supplier": {
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "acaa0d3fdc74fd4b534e70fc016cf7f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "internal_code",
                                    "identifier",
                                    "name",
                                    "price",
                                    "category_id",
                                    "brand_id",
                                    "supplier_id"
                                ],
                                "properties": {
                                    "internal_code": {
                                        "type": "string",
                                        "example": "PROD-001"
                                    },
                                    "identifier": {
                                        "type": "string",
                                        "example": "ESS-SV-PREMIUM"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Essilor Single Vision Premium"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High quality single vision lens",
                                        "nullable": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 199.99
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99,
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "internal_code": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details",
                "operationId": "249e765b6489191fb8167474db8867f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "internal_code": {
                                            "type": "string"
                                        },
                                        "identifier": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "cost": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "category": {
                                            "type": "object"
                                        },
                                        "brand": {
                                            "type": "object"
                                        },
                                        "supplier": {
                                            "type": "object"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product details",
                "operationId": "436a5b5d1aff1d5fd341389786161044",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "internal_code": {
                                        "type": "string",
                                        "example": "PROD-001"
                                    },
                                    "identifier": {
                                        "type": "string",
                                        "example": "ESS-SV-PREMIUM"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Essilor Single Vision Premium"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High quality single vision lens",
                                        "nullable": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 199.99
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99,
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "cc01048629edd9759ba1d7ffc989f667",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}/stock": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product stock information",
                "operationId": "b39f4c6828f10cef921823cf37e3ff20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product stock information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product_id": {
                                            "type": "integer"
                                        },
                                        "available_stock": {
                                            "type": "integer"
                                        },
                                        "reserved_stock": {
                                            "type": "integer"
                                        },
                                        "total_stock": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}/discounts": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product discounts",
                "operationId": "a7974c4fe04f2760349aab07453d89d3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product discounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "discount_percentage": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "is_active": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}/inventory": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product inventory information",
                "operationId": "461b2b4a75e64005515a6c81cad21510",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product inventory information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product_id": {
                                            "type": "integer"
                                        },
                                        "warehouse_locations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "total_quantity": {
                                            "type": "integer"
                                        },
                                        "last_updated": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/category/{categorySlug}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products by category",
                "operationId": "ca7b3ad156ed1ce67921bcdd7263d330",
                "parameters": [
                    {
                        "name": "categorySlug",
                        "in": "path",
                        "description": "Category slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Filter by brand",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "supplier_id",
                        "in": "query",
                        "description": "Filter by supplier",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products by category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "category": {
                                                        "type": "object"
                                                    },
                                                    "brand": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/lenses-by-prescription": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Get lenses filtered by prescription",
                "operationId": "4ed44f3d8546bf03e5360da94f3dbafc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sphere_od": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -2.5,
                                        "nullable": true
                                    },
                                    "cylinder_od": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -1,
                                        "nullable": true
                                    },
                                    "sphere_os": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -2,
                                        "nullable": true
                                    },
                                    "cylinder_os": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -0.5,
                                        "nullable": true
                                    },
                                    "correction_type": {
                                        "type": "string",
                                        "example": "single_vision",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Filtered lenses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "lens_type": {
                                                "type": "object"
                                            },
                                            "material": {
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/bulk-update-status": {
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Bulk update product status",
                "operationId": "c811e20b68ea136d64bb62b8a3f53cc7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_ids",
                                    "status"
                                ],
                                "properties": {
                                    "product_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Products status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "updated_count": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/search": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Search products",
                "operationId": "e8ceb2cfd0011db14b0d8b0e59c537b2",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit results",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "internal_code": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "category": {
                                                "type": "object"
                                            },
                                            "brand": {
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}/discount-info": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product discount information",
                "operationId": "fe305979992c4e371fceef1a97e649e6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Patient ID for personalized discounts",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product discount information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "has_discounts": {
                                            "type": "boolean"
                                        },
                                        "best_discount": {
                                            "type": "object"
                                        },
                                        "applicable_discounts": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}/active-discounts": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get active discounts for product",
                "operationId": "1fd133b1e372ee7770f5bd8b09a3f9d8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active discounts for product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "discount_percentage": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "start_date": {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "description": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}/calculate-price": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Calculate product price with discounts",
                "operationId": "dde21a32be3b37bae9e7b8006664b22b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Calculated price information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "unit_price": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "quantity": {
                                            "type": "integer"
                                        },
                                        "subtotal": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "discount_percentage": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "discount_amount": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "final_price": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/quotes": {
            "get": {
                "tags": [
                    "Quotes"
                ],
                "summary": "Get list of quotes",
                "operationId": "7b3b701143f7616bf8a91588f677116c",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "s_f",
                        "in": "query",
                        "description": "Search fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_v",
                        "in": "query",
                        "description": "Search values",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc/desc)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "quote_number": {
                                                        "type": "string"
                                                    },
                                                    "patient_id": {
                                                        "type": "integer"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "draft",
                                                            "sent",
                                                            "accepted",
                                                            "rejected",
                                                            "expired"
                                                        ]
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "valid_until": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "patient": {
                                                        "type": "object"
                                                    },
                                                    "items": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "created_by": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Quotes"
                ],
                "summary": "Create a new quote",
                "operationId": "4c0cc9ffec5d0d7f271242dd55163e8e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "items"
                                ],
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "valid_until": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Special discount applied",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "sent",
                                            "accepted",
                                            "rejected",
                                            "expired"
                                        ],
                                        "example": "draft"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "unit_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 99.99
                                                },
                                                "discount_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10,
                                                    "nullable": true
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Special instructions",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quote created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "quote_number": {
                                            "type": "string"
                                        },
                                        "patient_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "valid_until": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/quotes/{id}": {
            "get": {
                "tags": [
                    "Quotes"
                ],
                "summary": "Get quote details",
                "operationId": "a710e94a2cbe8e8f47292bec387b325a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quote ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "quote_number": {
                                            "type": "string"
                                        },
                                        "patient_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "valid_until": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "notes": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "patient": {
                                            "type": "object"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "created_by": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quote not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Quotes"
                ],
                "summary": "Update quote details",
                "operationId": "8cb321466d4e3d6f1008b931a18be3cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quote ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "valid_until": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Updated notes",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "sent",
                                            "accepted",
                                            "rejected",
                                            "expired"
                                        ],
                                        "example": "sent"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "unit_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 99.99
                                                },
                                                "discount_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10,
                                                    "nullable": true
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Special instructions",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quote updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "quote_number": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quote not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/quotes/{id}/status": {
            "patch": {
                "tags": [
                    "Quotes"
                ],
                "summary": "Update quote status",
                "operationId": "dcbe0ae2c4c82ebca9cf6ca020654043",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quote ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "sent",
                                            "accepted",
                                            "rejected",
                                            "expired"
                                        ],
                                        "example": "accepted"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quote status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quote not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/quotes/{id}/convert-to-sale": {
            "post": {
                "tags": [
                    "Quotes"
                ],
                "summary": "Convert quote to sale/order",
                "operationId": "433872af472a231f0a0b6267821679f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quote ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quote converted to order successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "order_number": {
                                            "type": "string"
                                        },
                                        "patient_id": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quote not found"
                    },
                    "422": {
                        "description": "Quote cannot be converted (invalid status)"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/quotes/{id}/pdf": {
            "get": {
                "tags": [
                    "Quotes"
                ],
                "summary": "Generate quote PDF",
                "operationId": "d59df87923d4cf7c1de3d63710008400",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quote ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "preview",
                        "in": "query",
                        "description": "Preview mode",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quote not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/suppliers": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get list of suppliers",
                "operationId": "f83117376e14a7f74ad31fc9f7312fb6",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "s_f",
                        "in": "query",
                        "description": "Search fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "s_v",
                        "in": "query",
                        "description": "Search values",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc/desc)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "contact_person": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ]
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Create a new supplier",
                "operationId": "a4657ad682bbe07aee1bb6018a080736",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Essilor International"
                                    },
                                    "contact_person": {
                                        "type": "string",
                                        "example": "John Smith",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "contact@essilor.com",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main Street",
                                        "nullable": true
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Paris",
                                        "nullable": true
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "Île-de-France",
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "France",
                                        "nullable": true
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "75001",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://www.essilor.com",
                                        "nullable": true
                                    },
                                    "tax_id": {
                                        "type": "string",
                                        "example": "FR123456789",
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Premium lens supplier",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Supplier created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/suppliers/{id}": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get supplier details",
                "operationId": "c7f750b4c2b6bcdfe978117fb926b093",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "contact_person": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "email": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "phone": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "address": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "city": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "state": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "country": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "postal_code": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "website": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "tax_id": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "notes": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Update supplier details",
                "operationId": "73b0bb2bb38c64c6213d130b79301646",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Essilor International"
                                    },
                                    "contact_person": {
                                        "type": "string",
                                        "example": "John Smith",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "contact@essilor.com",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main Street",
                                        "nullable": true
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Paris",
                                        "nullable": true
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "Île-de-France",
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "France",
                                        "nullable": true
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "75001",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://www.essilor.com",
                                        "nullable": true
                                    },
                                    "tax_id": {
                                        "type": "string",
                                        "example": "FR123456789",
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Premium lens supplier",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Supplier updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Delete a supplier",
                "operationId": "1b6d85b3e953285f866b8f489759e106",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Supplier deleted successfully"
                    },
                    "404": {
                        "description": "Supplier not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "operationId": "12e989554c281d650dff75443acabf54",
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "last_name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "identification": {
                                                "type": "string"
                                            },
                                            "phone": {
                                                "type": "string"
                                            },
                                            "role": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "64da9b5a20fa4f20e947ed61b2bbb6da",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "last_name",
                                    "email",
                                    "identification",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "identification": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "specialist",
                                            "receptionist"
                                        ],
                                        "example": "receptionist"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user details",
                "operationId": "a9d321d5dc6bc2613c6cf5ba92b76c89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "identification": {
                                            "type": "string"
                                        },
                                        "phone": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user details",
                "operationId": "5bcda8371b3cb9f863a47620e636be9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "identification": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "specialist",
                                            "receptionist"
                                        ],
                                        "example": "receptionist"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "0446b3779430bbd9ca0f106d9fd0a2ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Lens": {
                "required": [
                    "internal_code",
                    "identifier",
                    "type",
                    "material",
                    "lens_class",
                    "supplier",
                    "price",
                    "cost"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "internal_code": {
                        "type": "string",
                        "example": "SV-001"
                    },
                    "identifier": {
                        "type": "string",
                        "example": "ESS-SV-PREMIUM"
                    },
                    "type": {
                        "type": "string",
                        "example": "Single Vision"
                    },
                    "brand": {
                        "type": "string",
                        "example": "Essilor"
                    },
                    "material": {
                        "type": "string",
                        "example": "CR-39"
                    },
                    "lens_class": {
                        "type": "string",
                        "example": "Premium"
                    },
                    "treatment": {
                        "type": "string",
                        "example": "Anti-Reflective"
                    },
                    "photochromic": {
                        "type": "string",
                        "example": "Gen 8"
                    },
                    "description": {
                        "type": "string",
                        "example": "High-quality single vision lenses"
                    },
                    "supplier": {
                        "type": "string",
                        "example": "Essilor International"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 199.99
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 89.99
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LensType": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Single Vision"
                    },
                    "description": {
                        "type": "string",
                        "example": "Standard single vision lenses"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LensClass": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Premium"
                    },
                    "description": {
                        "type": "string",
                        "example": "High-end lens class"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LensMaterial": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "CR-39"
                    },
                    "description": {
                        "type": "string",
                        "example": "Standard plastic material"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LensTreatment": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Anti-Reflective"
                    },
                    "description": {
                        "type": "string",
                        "example": "Reduces glare and reflections"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LensPhotochromic": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Gen 8"
                    },
                    "description": {
                        "type": "string",
                        "example": "Latest generation photochromic technology"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Appointment": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "specialist_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "receptionist_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-03-20 14:30:00"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Regular checkup",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "scheduled",
                            "completed",
                            "cancelled"
                        ],
                        "example": "scheduled"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Patient": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "identification": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "identification_type": {
                        "type": "string",
                        "example": "dni"
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ],
                        "example": "male"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "example": "New York",
                        "nullable": true
                    },
                    "district": {
                        "type": "string",
                        "example": "Villavicencio",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "example": "NY",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "example": "Colombia",
                        "nullable": true
                    },
                    "neighborhood": {
                        "type": "string",
                        "example": "Downtown",
                        "nullable": true
                    },
                    "postal_code": {
                        "type": "string",
                        "example": "10001",
                        "nullable": true
                    },
                    "eps": {
                        "type": "string",
                        "example": "EPS/ARS",
                        "nullable": true
                    },
                    "affiliation": {
                        "type": "string",
                        "example": "Titular",
                        "nullable": true
                    },
                    "coverage": {
                        "type": "string",
                        "example": "PLAN_DE_BENEFICIOS",
                        "nullable": true
                    },
                    "occupation": {
                        "type": "string",
                        "example": "Engineer",
                        "nullable": true
                    },
                    "education": {
                        "type": "string",
                        "example": "University",
                        "nullable": true
                    },
                    "position": {
                        "type": "string",
                        "example": "Senior Developer",
                        "nullable": true
                    },
                    "company": {
                        "type": "string",
                        "example": "Acme Inc",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter token in format (Bearer <token>)"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Brands",
            "description": "API Endpoints for brand management"
        },
        {
            "name": "Lens Classes",
            "description": "API Endpoints for lens class management"
        },
        {
            "name": "Lens Notes",
            "description": "API Endpoints for lens notes management"
        },
        {
            "name": "Lens Types",
            "description": "API Endpoints for lens type management"
        },
        {
            "name": "Notes",
            "description": "API Endpoints for notes management"
        },
        {
            "name": "Orders",
            "description": "API Endpoints for order management"
        },
        {
            "name": "Products",
            "description": "API Endpoints for product management"
        },
        {
            "name": "Quotes",
            "description": "API Endpoints for quote management"
        },
        {
            "name": "Suppliers",
            "description": "API Endpoints for supplier management"
        },
        {
            "name": "Users",
            "description": "API Endpoints for user management"
        },
        {
            "name": "Appointments",
            "description": "Appointments"
        },
        {
            "name": "Patients",
            "description": "Patients"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}